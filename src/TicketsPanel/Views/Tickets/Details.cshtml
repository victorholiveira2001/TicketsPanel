@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@model TicketsPanel.Models.Ticket

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Ticket</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Messages)
        </dt>
        <dd class="col-sm-10" id="messages">
            @foreach (var message in Model.Messages)
            {
                <p>
                    @if (message.Sender.Id == Model.AttendantId){
                        @Html.Raw(message.Sender.Name + " - Atendente");
                    }
                    else
                    {
                        @Html.Raw(message.Sender.Name + " - Cliente");
                    }
                    <div> 
                        @Html.Raw(message.Body.Replace("\n", "<br />"))
                    </div>
                </p>
                <hr>
            }
            @if (Model.AttendantId == int.Parse(UserManager.GetUserId(User)) ||
            Model.ClientId == int.Parse(UserManager.GetUserId(User)))
            {
                var message = new Message();

                <div class="bottom-arrow">
                    <!-- Formulário para enviar a resposta -->
                    <form method="post" asp-action="SendMessage" id='commentsReplies_@message.MessageId' class="reply-form">
                        <input type="hidden" name="userId" value="@int.Parse(UserManager.GetUserId(User))" />
                        <input type="hidden" name="ticketId" value="@Model.TicketId" />

                        <!-- Botão para abrir a caixa de resposta -->
                        <fieldset name='post'>
                            <button class='reply' type='button' onclick="openReplyBox('@message.MessageId')">Responder</button>
                        </fieldset>

                        <!-- A textarea e o botão de enviar estarão inicialmente escondidos -->
                        <textarea hidden id="replyTextArea_@message.MessageId" name="content" placeholder="Digite sua resposta..." rows="3" cols="80"></textarea>
                        <button hidden id="send_@message.MessageId" type="submit" class="postCom">Enviar</button>
                    </form>
                </div>
            }
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Emails)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Emails)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Attachment)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Attachment)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Situation)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Situation)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReceiveResponse)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReceiveResponse)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SendReply)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SendReply)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.OpenTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.OpenTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CloseTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CloseTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Sla)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Sla)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Department)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Department.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Priority)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Priority)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Attendant)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Attendant.  Name)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.TicketId">Edit</a>
    <a asp-action="Index">Back to List</a>
    @{
        var user = await UserManager.GetUserAsync(User);

        if (Model.AttendantId is null && Model.ClientId != user.Id)
        {
            <a asp-action="Take" asp-route-id="@Model?.TicketId">Vincular</a>
        }
        if (Model.AttendantId == user.Id)
        {
            <a asp-action="Finish" asp-route-id="@Model?.TicketId">Finalizar</a>
        }
    }
</div>
<style>
    .message-body {
        white-space: pre-wrap;
        text-align: left; /* ou center, dependendo da sua preferência */
        margin: 0 auto;
    }
    #messages{
        background-color: #D3D3D3;
    }

    /*********************************************************/

    .bottom-arrow {
        border-bottom: 5px solid #6A0136;
    }

        .bottom-arrow:after {
            content: '';
            position: absolute;
            left: 0;
            right: 0;
            margin: 0 auto;
            width: 0;
            height: 0;
            border-top: 25px solid #6A0136;
            border-left: 50px solid transparent;
            border-right: 50px solid transparent;
        }

    /**********************************************************/

    /* Estilos para o botão de resposta */
    .postCom {
        background-color: #007bff; /* Azul para o botão */
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
    }

        /* Efeito ao passar o mouse no botão */
        .postCom:hover {
            background-color: #0056b3;
        }

</style>
<script>
    function openReplyBox(messageId) {
        // Exibe a textarea e o botão de enviar quando "Responder" for clicado
        document.getElementById('replyTextArea_' + messageId).removeAttribute('hidden');
        document.getElementById('send_' + messageId).removeAttribute('hidden');
    }
</script>