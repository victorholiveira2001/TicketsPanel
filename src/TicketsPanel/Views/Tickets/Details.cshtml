@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@model TicketsPanel.Models.Ticket

@{
    ViewData["Title"] = "Detalhes";
}

<h1>Detalhes</h1>

<head>
    <link rel="stylesheet" href="~/css/Tickets/details.css"/>
</head>

<div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model?.TicketId">Edit</a>
        <a asp-action="Index">Back to List</a>
        @{
            var user = await UserManager.GetUserAsync(User);

            if (Model.AttendantId is null && Model.ClientId != user.Id)
            {
                <a asp-action="Take" asp-route-id="@Model?.TicketId">Vincular</a>
            }
            if (Model.AttendantId == user.Id && Model.Situation != TicketsPanel.Enums.Situation.Finished)
            {
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#finalizarModal">Encerrar</button>

                <!-- Modal -->
                <div class="modal fade" id="finalizarModal" tabindex="-1" aria-labelledby="finalizarModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="finalizarModalLabel">Encerrar Ticket</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <form class="modal-body" asp-action="Finish">
                                <input type="hidden" name="ticketId" value="@Model.TicketId" />

                                <label for="encerramentoMensagem">Escreva a mensagem de encerramento:</label>
                                <textarea class="form-control" name="body" id="encerramentoMensagem" rows="8" cols="100" placeholder="Descreva o motivo do encerramento"></textarea>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                                    <button type="submit" class="btn btn-danger">Encerrar</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }
            else if (Model.AttendantId == user.Id)
            {

                <form method="post" asp-action="ReOpen">
                    <input type="hidden" name="ticketId" value="@Model.TicketId"/>

                    <button type="submit" class="btn btn-primary" id="btn-reopen">Reabrir Chamado</button>
                </form>
            }
        }
    </div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Messages)
        </dt>
        <dd class="col-sm-10" id="messages">
            @foreach (var message in Model.Messages.OrderByDescending(m => m.MessageId))
            {
                <div id="message-hub">
                    @if (message.Sender.Id == Model.AttendantId){
                        @Html.Raw(message.Sender.Name + " - Atendente");
                    }
                    else
                    {
                        @Html.Raw(message.Sender.Name + " - Cliente");
                    }
                    <div> 
                        @Html.Raw(message.Body.Replace("\n", "<br />"))
                    </div>
                </div>
                <span id="time-message">@message.SentTime</span>
                <hr>
            }
            @if ((Model.AttendantId == int.Parse(UserManager.GetUserId(User)) ||
                  Model.ClientId == int.Parse(UserManager.GetUserId(User))) && 
                  Model.Situation != TicketsPanel.Enums.Situation.Finished)
            {
                <div class="bottom-arrow">
                    <form method="post" asp-action="SendMessage" class="reply-form">
                        <input type="hidden" name="userId" value="@int.Parse(UserManager.GetUserId(User))" />
                        <input type="hidden" name="ticketId" value="@Model.TicketId" />

                        <fieldset name='post'>
                            <button class='reply' type='button' onclick="openReplyBox()">Responder</button>
                        </fieldset>

                        <textarea hidden id="reply-textarea" name="content" placeholder="Digite sua resposta..."></textarea>
                        <button hidden id="send" type="submit" class="postCom">Enviar</button>
                    </form>
                </div>
            }
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Emails)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Emails)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Attachment)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Attachment)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Situation)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Situation)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReceiveResponse)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReceiveResponse)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SendReply)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SendReply)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.OpenTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.OpenTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CloseTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CloseTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Sla)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Sla)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Department)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Department.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Priority)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Priority)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Attendant)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Attendant.  Name)
        </dd>
    </dl>
</div>
<script src="~/js/Tickets/details.js"></script>